<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <UserSecretsId>719f9e9c-9aed-40a9-a4d8-c57a2f438eb8</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Azure.Storage.Blobs" Version="12.4.1" />
    <PackageReference Include="CsvHelper" Version="12.3.2" />
    <PackageReference Include="HtmlAgilityPack" Version="1.11.21" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.10" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.8" />
    <PackageReference Include="Serilog.AspNetCore" Version="3.4.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="3.1.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="4.1.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\public\fonts\" />
    <Folder Include="ClientApp\public\images\" />
    <Folder Include="App_Data\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Manager\Whether.Manager.csproj" />
    <ProjectReference Include="..\Whether.Common\Whether.Common.csproj" />
    <ProjectReference Include="..\Whether.Repository\Whether.Repository.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="App_Data\Wether_2014.csv">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="App_Data\Wether_2015.csv">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="App_Data\Wether_2016.csv">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="App_Data\Wether_2017.csv">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="App_Data\Wether_2018.csv">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="App_Data\Wether_2019.csv">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="App_Data\Wether_2020.csv">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
